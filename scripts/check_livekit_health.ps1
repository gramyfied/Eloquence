# Script de diagnostic pour v√©rifier l'√©tat de sant√© du syst√®me LiveKit
Write-Host "üîç === DIAGNOSTIC SYST√àME LIVEKIT ===" -ForegroundColor Cyan

# V√©rifier les conteneurs Docker
Write-Host "`nüì¶ V√©rification des conteneurs Docker..." -ForegroundColor Yellow
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | Select-String "eloquence"

# V√©rifier les logs du serveur LiveKit
Write-Host "`nüîó V√©rification des logs LiveKit Server..." -ForegroundColor Yellow
docker logs eloquence-livekit-server-1 --tail 10

# V√©rifier les logs de l'agent
Write-Host "`nü§ñ V√©rification des logs Agent Multi-Agent..." -ForegroundColor Yellow
docker logs eloquence-multiagent --tail 10

# V√©rifier la connectivit√© r√©seau
Write-Host "`nüåê Test de connectivit√©..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8780" -TimeoutSec 5 -ErrorAction Stop
    Write-Host "‚úÖ LiveKit Server accessible sur le port 8780" -ForegroundColor Green
} catch {
    Write-Host "‚ùå LiveKit Server non accessible sur le port 8780" -ForegroundColor Red
}

try {
    $response = Invoke-WebRequest -Uri "http://localhost:8080/health" -TimeoutSec 5 -ErrorAction Stop
    Write-Host "‚úÖ Agent Multi-Agent accessible sur le port 8080" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Agent Multi-Agent non accessible sur le port 8080" -ForegroundColor Red
}

# V√©rifier les services Redis et Mistral
Write-Host "`nüîß V√©rification des services de support..." -ForegroundColor Yellow
docker logs eloquence-redis-1 --tail 5
docker logs eloquence-mistral-conversation-1 --tail 5

Write-Host "`n‚úÖ Diagnostic termin√©" -ForegroundColor Green

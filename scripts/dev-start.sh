#!/bin/bash
# Script de d√©marrage optimis√© pour le d√©veloppement

set -e

echo "üöÄ D√©marrage de l'environnement de d√©veloppement Eloquence"
echo "=================================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher des messages color√©s
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier si on est dans WSL ou Windows
if grep -q Microsoft /proc/version 2>/dev/null; then
    log_info "D√©tection de WSL 2 - Configuration optimale d√©tect√©e !"
    IN_WSL=true
else
    log_warning "Vous n'√™tes pas dans WSL 2. Pour de meilleures performances, consid√©rez d√©placer votre projet dans WSL 2."
    IN_WSL=false
fi

# V√©rifier Docker
if ! command -v docker &> /dev/null; then
    log_error "Docker n'est pas install√© ou pas dans le PATH"
    exit 1
fi

if ! docker info &> /dev/null; then
    log_error "Docker n'est pas d√©marr√© ou inaccessible"
    exit 1
fi

log_success "Docker est disponible"

# V√©rifier Docker Compose
if ! docker compose version &> /dev/null; then
    log_error "Docker Compose n'est pas disponible"
    exit 1
fi

log_success "Docker Compose est disponible"

# Nettoyer les conteneurs existants si demand√©
if [ "$1" = "--clean" ]; then
    log_info "Nettoyage des conteneurs existants..."
    docker compose -f docker-compose.dev.yml down --volumes --remove-orphans 2>/dev/null || true
    docker system prune -f --volumes 2>/dev/null || true
    log_success "Nettoyage termin√©"
fi

# Choisir le mode de d√©marrage
MODE=${1:-"dev"}

case $MODE in
    "watch")
        log_info "D√©marrage en mode Docker Compose Watch (synchronisation ultra-rapide)"
        COMPOSE_FILE="docker-compose.watch.yml"
        COMMAND="docker compose -f $COMPOSE_FILE up --watch"
        ;;
    "dev"|*)
        log_info "D√©marrage en mode d√©veloppement standard"
        COMPOSE_FILE="docker-compose.dev.yml"
        COMMAND="docker compose -f $COMPOSE_FILE up --build"
        ;;
esac

log_info "Fichier de configuration: $COMPOSE_FILE"

# V√©rifier que le fichier existe
if [ ! -f "$COMPOSE_FILE" ]; then
    log_error "Le fichier $COMPOSE_FILE n'existe pas"
    exit 1
fi

# Construire les images si n√©cessaire
log_info "Construction des images Docker..."
docker compose -f $COMPOSE_FILE build --parallel

# D√©marrer les services
log_info "D√©marrage des services..."
echo ""
log_success "üéØ Services qui vont d√©marrer:"
echo "   ‚Ä¢ API Backend (port 8000) - Hot reload activ√©"
echo "   ‚Ä¢ LiveKit Server (port 7880)"
echo "   ‚Ä¢ Redis (port 6379)"
echo "   ‚Ä¢ Whisper STT (port 8001)"
echo "   ‚Ä¢ Azure TTS (port 5002)"
echo ""
log_info "üî• Hot-reload activ√© - vos modifications seront appliqu√©es instantan√©ment !"
echo ""

# D√©marrer avec la commande appropri√©e
exec $COMMAND
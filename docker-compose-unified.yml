services:
  # === SERVICE REDIS (État et cache) ===
  redis:
    image: redis:7-alpine
    container_name: eloquence-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - eloquence-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis-data:/data

  # === SERVICE VOSK STT (Reconnaissance vocale) ===
  vosk-stt:
    build:
      context: ./services/vosk-stt-analysis
      dockerfile: Dockerfile
    container_name: eloquence-vosk-stt
    restart: unless-stopped
    ports:
      - "8002:8002"
    networks:
      - eloquence-network
    volumes:
      - vosk-models:/app/models
      - ./logs:/app/logs
    environment:
      - PYTHONIOENCODING=utf-8
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # === SERVICE MISTRAL (Conversation IA) ===
  mistral-conversation:
    build:
      context: ./services/mistral-conversation
      dockerfile: Dockerfile
    container_name: eloquence-mistral
    restart: unless-stopped
    ports:
      - "8001:8001"
    networks:
      - eloquence-network
    env_file:
      - .env
    environment:
      - SCALEWAY_MISTRAL_URL=${SCALEWAY_MISTRAL_URL}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - MISTRAL_MODEL=${MISTRAL_MODEL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # === SERVICE LIVEKIT SERVER (WebRTC) ===
  livekit-server:
    image: livekit/livekit-server:latest
    container_name: eloquence-livekit-server
    restart: unless-stopped
    ports:
      - "7880:7880"    # WebSocket
      - "7881:7881"    # TCP fallback
      - "40000-40100:40000-40100/udp"  # RTC traffic
    networks:
      - eloquence-network
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - "LIVEKIT_KEYS=devkey: devsecret123456789abcdef0123456789abcdef"
      - LIVEKIT_LOG_LEVEL=info
      - LIVEKIT_RTC_TCP_PORT=7881
      - LIVEKIT_RTC_PORT_RANGE_START=40000
      - LIVEKIT_RTC_PORT_RANGE_END=40100
      - LIVEKIT_REDIS_HOST=redis
      - LIVEKIT_REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:7880/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # === SERVICE TOKEN LIVEKIT (Génération JWT) ===
  livekit-token-service:
    build:
      context: ./services/livekit-server
      dockerfile: Dockerfile
    container_name: eloquence-livekit-token
    restart: unless-stopped
    ports:
      - "8004:8004"
    networks:
      - eloquence-network
    env_file:
      - .env
    environment:
      - LIVEKIT_API_KEY=devkey
      - LIVEKIT_API_SECRET=devsecret123456789abcdef0123456789abcdef
      - LIVEKIT_URL=ws://livekit-server:7880
    depends_on:
      livekit-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # === AGENT LIVEKIT UNIFIÉ (Routage intelligent) ===
  livekit-agent:
    build:
      context: ./services/livekit-agent
      dockerfile: Dockerfile.unified
    container_name: eloquence-livekit-agent
    restart: unless-stopped
    networks:
      - eloquence-network
    env_file:
      - .env
    environment:
      # Configuration LiveKit
      - LIVEKIT_URL=ws://livekit-server:7880
      - LIVEKIT_API_KEY=devkey
      - LIVEKIT_API_SECRET=devsecret123456789abcdef0123456789abcdef
      # URLs des services
      - VOSK_STT_URL=http://vosk-stt:8002
      - MISTRAL_BASE_URL=http://mistral-conversation:8001/v1/chat/completions
      - REDIS_URL=redis://redis:6379/0
      # Clés API
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      # Mode et debug
      - AGENT_MODE=unified
      - DEBUG=true
      - LOG_LEVEL=debug
    depends_on:
      livekit-server:
        condition: service_healthy
      livekit-token-service:
        condition: service_healthy
      mistral-conversation:
        condition: service_healthy
      vosk-stt:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5

  # === API EXERCICES (Backend principal) ===
  eloquence-exercises-api:
    build:
      context: ./services/eloquence-exercises-api
      dockerfile: Dockerfile
    container_name: eloquence-exercises-api
    restart: unless-stopped
    ports:
      - "8005:8005"
    networks:
      - eloquence-network
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LIVEKIT_URL=ws://livekit-server:7880
      - TOKEN_SERVICE_URL=http://livekit-token-service:8004
      - VOSK_SERVICE_URL=http://vosk-stt:8002
      - MISTRAL_SERVICE_URL=http://mistral-conversation:8001
    depends_on:
      redis:
        condition: service_healthy
      livekit-server:
        condition: service_healthy
      livekit-token-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  eloquence-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  vosk-models:
    driver: local
services:
  redis:
    image: redis:7-alpine
    restart: on-failure:5
    ports:
      - "6379:6379"
    networks:
      - eloquence-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis-data:/data

  livekit:
    image: livekit/livekit-server:latest
    command: --config /livekit.yaml
    restart: unless-stopped
    ports:
      - "7880:7880"
      - "7881:7881"
    volumes:
      - ./services/livekit/livekit.yaml:/livekit.yaml:ro
      - livekit-data:/data
    networks:
      - eloquence-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7880"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  vosk-stt:
    build:
      context: ./services/vosk-stt-analysis
      dockerfile: Dockerfile
    image: eloquence/vosk-stt:latest
    restart: unless-stopped
    ports:
      - "2700:2700"
    networks:
      - eloquence-network
    volumes:
      - vosk-models:/app/models
      - ./logs:/app/logs
    environment:
      - PYTHONIOENCODING=utf-8
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2700/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  openai-tts:
    build:
      context: ./services/api-backend/openai-tts
      dockerfile: Dockerfile
    image: eloquence/openai-tts:latest
    restart: unless-stopped
    ports:
      - "5002:5002"
    networks:
      - eloquence-network
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mistral-conversation:
    build:
      context: ./services/mistral-conversation
      dockerfile: Dockerfile
    image: eloquence/mistral-conversation:latest
    restart: unless-stopped
    ports:
      - "8001:8001"
    networks:
      - eloquence-network
    env_file:
      - .env
    environment:
      - SCALEWAY_MISTRAL_URL=${SCALEWAY_MISTRAL_URL}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - MISTRAL_MODEL=${MISTRAL_MODEL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  api-backend:
    build:
      context: ./services/api-backend
      dockerfile: Dockerfile
    image: eloquence/api-backend:latest
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - eloquence-network
    env_file:
      - .env
    environment:
      - LIVEKIT_URL=ws://livekit:7880
      - LIVEKIT_URL_EXTERNAL=ws://192.168.1.44:7880
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - VOSK_STT_URL=http://vosk-stt:2700
      - OPENAI_TTS_URL=https://api.openai.com/v1/audio/speech
      - REDIS_URL=redis://redis:6379/0
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - SCALEWAY_MISTRAL_URL=${SCALEWAY_MISTRAL_URL}
      - MISTRAL_MODEL=${MISTRAL_MODEL}
    depends_on:
      livekit:
        condition: service_healthy
      redis:
        condition: service_healthy
      vosk-stt:
        condition: service_healthy
      openai-tts:
        condition: service_healthy
      mistral-conversation:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  livekit-token-service:
    build:
      context: ./services/livekit-server
      dockerfile: Dockerfile
    image: eloquence/livekit-token-service:latest
    restart: unless-stopped
    ports:
      - "8004:8004"
    networks:
      - eloquence-network
    env_file:
      - .env
    environment:
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - LIVEKIT_URL=ws://livekit:7880
    depends_on:
      livekit:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  eloquence-agent-v1:
    build:
      context: ./services/api-backend
      dockerfile: Dockerfile.agent.dev
    image: eloquence/agent-v1:latest
    command: python -u services/real_time_voice_agent_force_audio_fixed.py dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - LIVEKIT_URL=ws://livekit:7880
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - VOSK_STT_URL=http://vosk-stt:2700
      - OPENAI_TTS_URL=https://api.openai.com/v1/audio/speech
      # Variables Mistral manquantes ajout√©es pour corriger 401 Unauthorized
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - SCALEWAY_MISTRAL_URL=${SCALEWAY_MISTRAL_URL}
      - MISTRAL_MODEL=${MISTRAL_MODEL}
    networks:
      - eloquence-network
    depends_on:
      livekit:
        condition: service_healthy
      livekit-token-service:
        condition: service_healthy
      redis:
        condition: service_healthy
      vosk-stt:
        condition: service_healthy
      openai-tts:
        condition: service_healthy

networks:
  eloquence-network:
    driver: bridge

volumes:
  livekit-data:
    driver: local
  redis-data:
    driver: local
  vosk-models:
    driver: local

# ================================================================
# DOCKERFILE SÉCURISÉ ELOQUENCE API
# ================================================================
# Image de base minimale et sécurisée
FROM python:3.11-slim-bullseye AS base

# Métadonnées de sécurité
LABEL maintainer="eloquence-security@your-domain.com"
LABEL security.scan="enabled"
LABEL security.level="high"

# Variables d'environnement sécurisées
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# ================================================================
# ÉTAPE 1: PRÉPARATION SÉCURISÉE
# ================================================================
FROM base AS security-prep

# Créer un utilisateur non-root avec UID/GID fixes
RUN groupadd -r -g 1000 eloquence && \
    useradd -r -u 1000 -g eloquence -d /app -s /bin/bash eloquence

# Installer uniquement les dépendances système essentielles
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl=7.74.0-1.3+deb11u* \
    ca-certificates=20210119 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# ================================================================
# ÉTAPE 2: INSTALLATION DES DÉPENDANCES
# ================================================================
FROM security-prep AS deps

# Créer le répertoire de travail avec permissions appropriées
WORKDIR /app
RUN chown eloquence:eloquence /app

# Copier et installer les dépendances Python
COPY --chown=eloquence:eloquence requirements.txt .

# Installer les dépendances avec versions fixes
RUN pip install --no-cache-dir --upgrade pip==23.3.1 && \
    pip install --no-cache-dir -r requirements.txt && \
    pip cache purge

# ================================================================
# ÉTAPE 3: APPLICATION SÉCURISÉE
# ================================================================
FROM deps AS app

# Copier le code source avec permissions appropriées
COPY --chown=eloquence:eloquence . .

# Supprimer les fichiers sensibles et inutiles
RUN find . -name "*.pyc" -delete && \
    find . -name "__pycache__" -type d -exec rm -rf {} + && \
    rm -rf .git .gitignore README.md tests/ docs/ && \
    rm -rf /tmp/* /var/tmp/* && \
    chmod -R 755 /app && \
    chmod 644 /app/*.py

# Créer les répertoires nécessaires avec permissions sécurisées
RUN mkdir -p /app/logs /app/tmp && \
    chown eloquence:eloquence /app/logs /app/tmp && \
    chmod 755 /app/logs /app/tmp

# ================================================================
# ÉTAPE 4: CONFIGURATION FINALE SÉCURISÉE
# ================================================================
FROM app AS final

# Passer à l'utilisateur non-root
USER eloquence

# Exposer le port (non privilégié)
EXPOSE 8080

# Configuration de santé sécurisée
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Point d'entrée sécurisé avec validation
ENTRYPOINT ["python", "-m", "uvicorn"]
CMD ["app:app", "--host", "0.0.0.0", "--port", "8080", "--workers", "1", "--access-log", "--log-level", "info"]

# ================================================================
# MÉTADONNÉES DE SÉCURITÉ FINALES
# ================================================================
LABEL security.user="eloquence:1000"
LABEL security.ports="8080"
LABEL security.volumes="/app/logs,/app/tmp"
LABEL security.capabilities="none"
LABEL security.readonly="true"

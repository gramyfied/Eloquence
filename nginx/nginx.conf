# ================================================================
# CONFIGURATION NGINX SÉCURISÉE ELOQUENCE
# ================================================================
# Reverse proxy sécurisé pour production Scaleway
# ================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configuration des événements optimisée
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ================================================================
    # CONFIGURATION DE BASE SÉCURISÉE
    # ================================================================
    
    # Types MIME et encodage
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;
    
    # Optimisations de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # ================================================================
    # SÉCURITÉ GLOBALE
    # ================================================================
    
    # Masquer la version Nginx
    server_tokens off;
    
    # Limites de sécurité
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Protection contre les attaques
    client_body_in_file_only clean;
    client_body_in_single_buffer on;
    
    # ================================================================
    # LOGGING SÉCURISÉ
    # ================================================================
    
    # Format de log sécurisé (sans données sensibles)
    log_format secure_main '$remote_addr - $remote_user [$time_local] '
                          '"$request_method $scheme://$host$request_uri" '
                          '$status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log secure_main;
    
    # ================================================================
    # GZIP ET COMPRESSION
    # ================================================================
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # ================================================================
    # HEADERS DE SÉCURITÉ GLOBAUX
    # ================================================================
    
    # Headers de sécurité appliqués à toutes les réponses
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Download-Options "noopen" always;
    
    # Content Security Policy strict
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'none';" always;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Permissions Policy
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()" always;
    
    # ================================================================
    # LIMITATION DU TAUX DE REQUÊTES
    # ================================================================
    
    # Zone de limitation par IP
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Zone de limitation des connexions
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # ================================================================
    # UPSTREAM BACKENDS SÉCURISÉS
    # ================================================================
    
    # API principale
    upstream eloquence_api {
        server eloquence-api:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Service Vosk STT
    upstream vosk_stt {
        server vosk-stt:8002 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # Service Mistral
    upstream mistral_ai {
        server mistral:8001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # LiveKit
    upstream livekit {
        server livekit:7880 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # ================================================================
    # SERVEUR PRINCIPAL HTTPS
    # ================================================================
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name your-domain.com;
        
        # ================================================================
        # CONFIGURATION SSL/TLS SÉCURISÉE
        # ================================================================
        
        ssl_certificate /etc/ssl/certs/eloquence.crt;
        ssl_certificate_key /etc/ssl/private/eloquence.key;
        
        # Protocoles et chiffrements sécurisés
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Configuration SSL optimisée
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # ================================================================
        # LIMITATIONS DE SÉCURITÉ
        # ================================================================
        
        # Limitation des connexions par IP
        limit_conn conn_limit_per_ip 20;
        
        # ================================================================
        # ROUTES API SÉCURISÉES
        # ================================================================
        
        # Health check public
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        # API principale avec limitation
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Headers de sécurité pour API
            add_header X-API-Version "1.0" always;
            
            # Proxy vers l'API
            proxy_pass http://eloquence_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Authentification avec limitation stricte
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://eloquence_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts courts pour auth
            proxy_connect_timeout 3s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Upload avec limitation stricte
        location /api/upload/ {
            limit_req zone=upload burst=2 nodelay;
            
            # Limitation de taille spécifique
            client_max_body_size 50M;
            
            proxy_pass http://eloquence_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts longs pour upload
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Service Vosk STT
        location /stt/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://vosk_stt/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts pour STT
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # Service Mistral IA
        location /ai/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://mistral_ai/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts pour IA
            proxy_connect_timeout 5s;
            proxy_send_timeout 180s;
            proxy_read_timeout 180s;
        }
        
        # LiveKit WebSocket
        location /livekit/ {
            proxy_pass http://livekit/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts pour WebSocket
            proxy_connect_timeout 5s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
        }
        
        # Bloquer les accès non autorisés
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquer les fichiers sensibles
        location ~* \.(env|log|conf|key|pem)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # ================================================================
    # REDIRECTION HTTP VERS HTTPS
    # ================================================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name your-domain.com;
        
        # Redirection permanente vers HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # ================================================================
    # SERVEUR PAR DÉFAUT (SÉCURITÉ)
    # ================================================================
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        
        # Certificat par défaut
        ssl_certificate /etc/ssl/certs/eloquence.crt;
        ssl_certificate_key /etc/ssl/private/eloquence.key;
        
        # Rejeter toutes les requêtes non autorisées
        return 444;
    }
}
